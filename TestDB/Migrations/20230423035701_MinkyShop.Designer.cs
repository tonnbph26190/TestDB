// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinkyShopProject.Business.Context;

#nullable disable

namespace MinkyShopProject.Business.Migrations
{
    [DbContext(typeof(MinkyShopDbContext))]
    [Migration("20230423035701_MinkyShop")]
    partial class MinkyShop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinkyShopProject.Business.Entities.BienThe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Anh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("https://reactnative-examples.com/wp-content/uploads/2022/02/default-loading-image.png");

                    b.Property<float>("GiaBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("BienThe", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.BienTheChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdBienThe")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGiaTri")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdThuocTinhSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdBienThe");

                    b.HasIndex("IdGiaTri");

                    b.HasIndex("IdThuocTinhSanPham");

                    b.ToTable("BienTheChiTiet", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.DanhGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BienTheId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("BienTheId");

                    b.HasIndex("IdHoaDon")
                        .IsUnique();

                    b.HasIndex("IdKhachHang");

                    b.ToTable("DanhGia", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GiaoCa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("GhiChuPhatSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChuRutTien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdNhanVienCaTiepTheo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhanVienTrongCa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ThoiGianGiaoCa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianNhanCa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianReset")
                        .HasColumnType("datetime2");

                    b.Property<float>("TienBanDau")
                        .HasColumnType("real");

                    b.Property<float?>("TienPhatSinh")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienKhac")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienMat")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienMatCaTruoc")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienMatCuoiCa")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienMatRut")
                        .HasColumnType("real");

                    b.Property<float?>("TongTienTrongCa")
                        .HasColumnType("real");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNhanVienTrongCa");

                    b.ToTable("GiaoCa", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GiaTri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdThuocTinh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdThuocTinh");

                    b.ToTable("GiaTri", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang")
                        .IsUnique();

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<float>("DonGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<Guid>("IdBienThe")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdBienThe");

                    b.HasIndex("IdGioHang");

                    b.ToTable("GioHangChiTiet", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HinhThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KieuThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<float>("TongTienThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.ToTable("HinhThucThanhToan", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChuCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChuGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoaiDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiaoHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayLayHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXacNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TienShip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<float>("TongTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrangThaiGiaoHang")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdNhanVien");

                    b.HasIndex("Ma")
                        .IsUnique();

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<float>("DonGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdBienThe")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBienThe");

                    b.HasIndex("IdHoaDon");

                    b.ToTable("HoaDonChiTiet", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdViDiem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLanMua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdViDiem")
                        .IsUnique()
                        .HasFilter("[IdViDiem] IS NOT NULL");

                    b.HasIndex("Sdt")
                        .IsUnique()
                        .HasFilter("[Sdt] IS NOT NULL");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("VaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Ma")
                        .IsUnique()
                        .HasFilter("[Ma] IS NOT NULL");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.NhomSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid?>("IdParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdParent");

                    b.ToTable("NhomSanPham", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Anh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("https://reactnative-examples.com/wp-content/uploads/2022/02/default-loading-image.png");

                    b.Property<Guid?>("IdNhomSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdNhomSanPham");

                    b.HasIndex("Ma")
                        .IsUnique()
                        .HasFilter("[Ma] IS NOT NULL");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ThuocTinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("ThuocTinh", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ThuocTinhSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdThuocTinh")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("IdThuocTinh");

                    b.ToTable("ThuocTinhSanPham", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ViDiem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("SoDiemDaCong")
                        .HasColumnType("real");

                    b.Property<float>("SoDiemDaDung")
                        .HasColumnType("real");

                    b.Property<float>("TongDiem")
                        .HasColumnType("real");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViDiem");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<int>("HinhThucGiamGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("LoaiGiamGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("SoTienCan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<float>("SoTienGiam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Ma")
                        .IsUnique()
                        .HasFilter("[Ma] IS NOT NULL");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.VoucherKhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherKhachHang", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.VoucherLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<float>("SoTienGiam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<float>("TienSauKhiGiam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<float>("TienTruocKhiGiam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdVoucher");

                    b.ToTable("VoucherLog", (string)null);
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.BienThe", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.SanPham", "SanPham")
                        .WithMany("BienThes")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.BienTheChiTiet", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.BienThe", "BienThe")
                        .WithMany("BienTheChiTiets")
                        .HasForeignKey("IdBienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.GiaTri", "GiaTri")
                        .WithMany("BienTheChiTiets")
                        .HasForeignKey("IdGiaTri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.ThuocTinhSanPham", "ThuocTinhSanPham")
                        .WithMany("BienTheChiTiets")
                        .HasForeignKey("IdThuocTinhSanPham")
                        .IsRequired();

                    b.Navigation("BienThe");

                    b.Navigation("GiaTri");

                    b.Navigation("ThuocTinhSanPham");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.DanhGia", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.BienThe", null)
                        .WithMany("DanhGias")
                        .HasForeignKey("BienTheId");

                    b.HasOne("MinkyShopProject.Business.Entities.HoaDon", "HoaDon")
                        .WithOne("DanhGia")
                        .HasForeignKey("MinkyShopProject.Business.Entities.DanhGia", "IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.KhachHang", "KhachHang")
                        .WithMany("DanhGias")
                        .HasForeignKey("IdKhachHang")
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GiaoCa", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.NhanVien", "NhanVien")
                        .WithMany("GiaoCas")
                        .HasForeignKey("IdNhanVienTrongCa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GiaTri", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.ThuocTinh", "ThuocTinh")
                        .WithMany("GiaTris")
                        .HasForeignKey("IdThuocTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GioHang", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.KhachHang", "KhachHang")
                        .WithOne("GioHang")
                        .HasForeignKey("MinkyShopProject.Business.Entities.GioHang", "IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GioHangChiTiet", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.BienThe", "BienThe")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdBienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienThe");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HinhThucThanhToan", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.HoaDon", "HoaDon")
                        .WithMany("HinhThucThanhToans")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HoaDon", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MinkyShopProject.Business.Entities.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HoaDonChiTiet", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.BienThe", "BienThe")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IdBienThe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BienThe");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.KhachHang", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.ViDiem", "ViDiem")
                        .WithOne("KhachHang")
                        .HasForeignKey("MinkyShopProject.Business.Entities.KhachHang", "IdViDiem")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ViDiem");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.NhomSanPham", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.NhomSanPham", "NhomSanPhamEntity")
                        .WithMany("NhomSanPhams")
                        .HasForeignKey("IdParent");

                    b.Navigation("NhomSanPhamEntity");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.SanPham", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.NhomSanPham", "NhomSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdNhomSanPham")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("NhomSanPham");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ThuocTinhSanPham", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.SanPham", "SanPham")
                        .WithMany("ThuocTinhSanPhams")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.ThuocTinh", "ThuocTinh")
                        .WithMany("ThuocTinhSanPhams")
                        .HasForeignKey("IdThuocTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("ThuocTinh");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.VoucherKhachHang", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.Voucher", "Voucher")
                        .WithMany("VoucherKhachHangs")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.VoucherLog", b =>
                {
                    b.HasOne("MinkyShopProject.Business.Entities.HoaDon", "HoaDon")
                        .WithMany("VoucherLogs")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinkyShopProject.Business.Entities.Voucher", "Voucher")
                        .WithMany("VoucherLogs")
                        .HasForeignKey("IdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.BienThe", b =>
                {
                    b.Navigation("BienTheChiTiets");

                    b.Navigation("DanhGias");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GiaTri", b =>
                {
                    b.Navigation("BienTheChiTiets");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.HoaDon", b =>
                {
                    b.Navigation("DanhGia")
                        .IsRequired();

                    b.Navigation("HinhThucThanhToans");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("VoucherLogs");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.KhachHang", b =>
                {
                    b.Navigation("DanhGias");

                    b.Navigation("GioHang")
                        .IsRequired();

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.NhanVien", b =>
                {
                    b.Navigation("GiaoCas");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.NhomSanPham", b =>
                {
                    b.Navigation("NhomSanPhams");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.SanPham", b =>
                {
                    b.Navigation("BienThes");

                    b.Navigation("ThuocTinhSanPhams");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ThuocTinh", b =>
                {
                    b.Navigation("GiaTris");

                    b.Navigation("ThuocTinhSanPhams");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ThuocTinhSanPham", b =>
                {
                    b.Navigation("BienTheChiTiets");
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.ViDiem", b =>
                {
                    b.Navigation("KhachHang")
                        .IsRequired();
                });

            modelBuilder.Entity("MinkyShopProject.Business.Entities.Voucher", b =>
                {
                    b.Navigation("VoucherKhachHangs");

                    b.Navigation("VoucherLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
